---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Admin.
--- DateTime: 2021/7/12 14:38
---
local cls = {
    res = "ui/achievement"
}

local AchievementState = {
    Doing = "Doing",
    Complete = "Complete",
    Finish = "Finish"
}

CS.Images.Load("Res/Achievement","Achievement")

function cls:init()
    self.hasClose = false
    UI.button(self.node,"btnClose",function()
        self.hasClose = true
        UI.close(self)
    end)
    self:show(true)
end

function cls:show(show)
    UI.enable(self.node,show)
    if show then
        message:send("C2S_openAchievement",{},function(msg)
            if self.hasClose then
                return
            end
            self:updateList(msg)
        end)
    end
end


function cls:sortList(data)
    local temp = function(state)
        if state == "Complete" then
            return 0
        elseif state == "Doing"  then
            return 1
        else
            return 2
        end
    end

    table.sort(data,function(a,b)
        local va = temp(a.state)
        local vb = temp(b.state)
        if va ~= vb then
            return va < vb
        else
            return a.id < b.id
        end
    end)
    local parent = UI.child(self.node,"list/v/c")
    UI.cloneChild(parent,#data)
    for i = 1, #data do
        local node = parent:GetChild(i-1)
        self:updateListItem(node,data[i])
    end
end

--msg S2C_openAchievement
function cls:updateList(msg)
    self.achieveData = msg.list
    self:sortList(msg.list)
end

function cls:findAchieveType(id)
    local temp = config["achievement"]
    for i = 1, #temp do
        if temp[i].id == id then
            return temp[i].type
        end
    end
end

function cls:updateListData(data)
    if self.achieveData ~= nil and #self.achieveData>0 then
        local  crtType = self:findAchieveType(data.id)
        for i = 1, #self.achieveData do
            if crtType == self:findAchieveType(self.achieveData[i].id) then
                self.achieveData[i] = data
                return;
            end
        end
    end
end

--data AchievementInfo
function cls:updateListItem(node,data)
    local achievementConfig = config["achievement"]
    local tempConfig = table.find(achievementConfig,function(a)
        if a.id == data.id then
            return a
        end
    end)

    local hasFinish = data.state == AchievementState.Finish

    if hasFinish then
        local lastConfig
        for i = 1, #achievementConfig do
            if achievementConfig[i].type == tempConfig.type then
                lastConfig = achievementConfig[i]
                if i >= #achievementConfig or achievementConfig[i+1].type ~= tempConfig.type then
                    break;
                end
            end
        end
        tempConfig = lastConfig
    end
    local targetNum = tempConfig.num

 
    local fillData ={
       name = tempConfig.name,
       icon = tempConfig.type,
       title = tempConfig.describe,
       sliderNum = heroFightValueFormat( data.crtValue).."/"..heroFightValueFormat(targetNum),
       btnGet = function()
           self:onBtnGetClick(node,data)
       end
    }



    local idData ={}

    local usedCount = 0
    local temp = function(id, num)
        if usedCount >3 then
            log_call("配置错误，成就只能显示3个奖励，成就id：".. data.id)
            return
        end
        usedCount = usedCount+1

        local icon = id
        if id <1000 then
            local itemConfig = table.find(config["item"],function(a)
                return a.id == id
            end)
            if itemConfig then
                icon = itemConfig.icon
            end
        end

        fillData["item"..usedCount]= {
            icon = icon,
            num = goldFormat(num)
        }
        idData[usedCount] = id
    end
    if tempConfig.money > 0 then
        temp(1000, tempConfig.money)
    end

    if tempConfig.food > 0 then
        temp(2000, tempConfig.food)
    end

    if tempConfig.soldier >0 then
        temp(3000, tempConfig.soldier)
    end

    if tempConfig.gold >0 then
        temp(5000, tempConfig.gold)
    end

    if #tempConfig.item >=2 then
        for i = 1, #tempConfig.item,2 do
            temp(tempConfig.item[i], tempConfig.item[i+1])
        end
    end

    UI.draw(node, fillData)

    for i = 1, usedCount do
        UI.button(node,"item"..i.."/icon", function()
            UI.showItemInfo(idData[i])
        end)
        UI.enable(node,"item"..i.."/icon",true)
        UI.enable(node,"item"..i.."/num",true)
    end

    if usedCount <3 then
        for i = usedCount+1, 3 do
            UI.enable(node,"item"..i.."/icon",false)
            UI.enable(node,"item"..i.."/num",false)
        end
    end

    local btn = UI.child(node,"btnGet")
    local img = btn.gameObject:GetComponent(typeof(CS.UnityEngine.UI.Image))
    if data.state == AchievementState.Doing then
        img.color = CS.UnityEngine.Color.gray
        UI.text(btn,"text","未完成")
    elseif data.state == AchievementState.Complete then
        UI.text(btn,"text","领取")
        img.color = CS.UnityEngine.Color.white
    end


    UI.enable(node,"finish",hasFinish)
    UI.enable(node,"btnGet",not hasFinish)
    --if hasFinish then
    --    node:SetAsLastSibling()
    --end

    local slider = UI.child(node,"slider")
            .gameObject:GetComponent(typeof(CS.UnityEngine.UI.Slider))
    slider.value = data.crtValue/ tempConfig.num

end

function cls:onBtnGetClick(node,data)
    if data.state == AchievementState.Doing then
        UI.showHint("成就未完成")
    else
        message:send("C2S_tryGetAchieveReward",{id=data.id},function(msg)
            if self.hasClose then
                return
            end
            if msg.code == "AchieveDoing" then
                UI.showHint("成就还未完成")
            elseif msg.code == "AchieveFinish" then
                UI.showHint("该系列所有成就已完成")
            elseif msg.code == "ErrId" then
                UI.showHint("任务Id错误")
            else
                if msg.rewards and #msg.rewards >0 then
                    local itemConfig = config["item"]
                    local time = 0
                    for i, v in ipairs(msg.rewards) do
                        UI.delay(self.node,time,function()
                            ItemTools.showItemResultById(v.id,v.count)
                        end)
                        time = time+0.5
                    end
                end
                --self:updateListItem(node,msg.achieve)

                self:updateListData(msg.achieve)
                self:sortList(self.achieveData)
            end
        end)
    end
end

return cls