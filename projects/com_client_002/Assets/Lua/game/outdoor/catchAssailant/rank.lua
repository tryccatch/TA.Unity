---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Admin.
--- DateTime: 2021/7/2 15:59
---
local class = {
    killPageData = nil,
    ScorePageData = nil
}

CS.Images.Load("Res/UnityRankIcon", "UnityRankIcon")

local controller = nil

---@param ctr [catchAssailant]
function class:init(root,ctr)
    self.root = root
    controller = ctr
    local param = {
        btnClose = function()
            self:show(false)
        end,
        btnHelp = function()
            controller:openPage(controller.Pages.HelpPage)
        end
    }
    UI.draw(self.root,"base",param)
    UI.toggle(self.root,"base/btnKill",function(msg)
        self:onBtnKill(msg)
    end,true)

    UI.toggle(self.root,"base/btnScore",function(msg)
        self:onBtnScore(msg)
    end,true)
    self:show(true)
end

function class:show(show)
    if show then
        print("show rank")
        local btnScore = UI.child(self.root,"base/btnScore")
        local toggle = btnScore.gameObject:GetComponent(typeof(CS.UnityEngine.UI.Toggle))
        toggle.isOn = true
        self:onBtnKill(false)
        self:onBtnScore(true)
    else
        self.killPageData = nil
        self.ScorePageData = nil
    end
    UI.enable(self.root,show)
end

function class:onBtnScore(isOn)
    print("show rank on btnScore:",isOn,self.ScorePageData == nil)
    UI.enable(self.root,"base/btnScore/item",isOn)
    if isOn then
        message:send("C2S_GetScoreRank",{},function(msg)
            print("show rank on btnScore msg back")
            self.ScorePageData = msg
            local parentNode = UI.child(self.root,"pageScore/list/v/c")
            UI.enable(self.root,"pageScore/list/v/noKill",msg.isEmpty)
            UI.enable(parentNode,not msg.isEmpty)
            if not msg.isEmpty then
                UI.cloneChild(parentNode,#msg.items)
                for i = 1, #msg.items do
                    local item = parentNode:GetChild(i-1)
                    if msg.myRank == i then
                        msg.items[i].name = "<color=#01ff00>"..msg.items[i].name.."</color>"
                    end
                    if i < 4 then
                        msg.items[i].orderIcon = i
                    end
                    UI.draw(item,msg.items[i])
                    UI.enable(item,"orderIcon",i < 4)
                end
            end
            local myRank = msg.myRank
            if myRank <0 then
                myRank = "未上榜"
            end
            local myData = {
                myScore = msg.myScore,
                myRank = myRank
            }
            UI.draw(self.root,"pageScore",myData)
        end)
    end

    UI.enable(self.root,"pageScore",isOn)
    UI.enable(self.root,"pageKill",not isOn)
end

function class:onBtnKill(isOn)
    UI.enable(self.root,"base/btnKill/item",isOn)
    if isOn then
        if self.killPageData == nil then
            message:send("C2S_GetKillRank",{},function(msg)
                self.killPageData = msg
                local parentNode = UI.child(self.root,"pageKill/list/v/c")
                UI.enable(self.root,"pageKill/list/v/noKill",msg.isEmpty)
                UI.enable(parentNode,not msg.isEmpty)
                if not msg.isEmpty then
                    UI.cloneChild(parentNode,#msg.items)
                    for i = 1, #msg.items do
                        local item = parentNode:GetChild(i-1)
                        if msg.items[i].name == client.user.name then
                            msg.items[i].name = "<color=#01ff00>"..msg.items[i].name.."</color>"
                        end
                        if i < 4 then
                            msg.items[i].orderIcon = i
                        end
                        msg.items[i].time = self:getTimeStr(msg.items[i].time)
                        UI.draw(item,msg.items[i])
                        UI.enable(item,"orderIcon",i < 4)
                    end

                    UI.text(self.root,"pageKill/newestKiller",msg.newestKiller)
                else
                    UI.text(self.root,"pageKill/newestKiller","--")
                end
            end)
        end
    end

    UI.enable(self.root,"pageScore",not isOn)
    UI.enable(self.root,"pageKill",isOn)
end


function class:getTimeStr(time)
    local time = convertToTime(time/1000)
    return time.month .. "-"..time.day.." "..time.hour..":"..time.minute..":"..time.second
end

return class