---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Admin.
--- DateTime: 2021/7/8 17:13
---
local class = {
}

local controller = nil
local rankPageEnable = false;

---@param ctr [catchAssailant]
function class:init(root,ctr)
    self.root = root
    controller = ctr
    UI.button(self.root,"btnClose",function()
        self:show(false)
    end)

    UI.button(self.root,"btnChange",function()
        message:send("C2S_getBossRecover",{},function(msg)
            self:showRecover(true,msg)
        end)
    end)

    UI.button(self.root,"btnRank",function()
        self:updateRankPage()
    end)

    UI.button(self.root,"hero/btnAtk",function()
        message:send("C2S_attackBoss",{},function(msg)
            if msg.inCatchTime then
                self:showAttackCG(msg)
            else
                controller:backToEntry()
            end
        end)
    end)
    CS.Sound.PlayMusic("music/worldbossfight")
end

function class:updateRankPage()
    rankPageEnable = not rankPageEnable
    local node = UI.child(self.root,"btnRank/arrow")
    self:showRankPage(rankPageEnable)
    if rankPageEnable then
        node.localScale = CS.UnityEngine.Vector3(1,-1,1)
    else
        node.localScale = CS.UnityEngine.Vector3(1,1,1)
    end
end

function class:showRankPage(show)
    UI.enable(self.root,"rankPage",show)
    if show then
        message:send("C2S_getBossRank",{},function(msg)
            local count = #msg.info
            local parent = UI.child(self.root,"rankPage/list/v/c")
            UI.cloneChild(parent,count)
            for i = 1, count do
                local node = parent:GetChild(i-1)
                if node then
                    msg.info[i].atk = goldFormat(msg.info[i].atk)
                    if msg.info[i].name == client.user.name then
                        msg.info[i].name = "<color=#01ff00>"..msg.info[i].name.."</color>"
                    end
                    UI.draw(node,msg.info[i])
                end
            end
        end)
    end
end
--S2C_attackBoss

function class:showAttackCG(msg)
    if msg.dmg <=0 then
        self:attackBossResult(msg)
        UI.enable(self.root,"hero/btnAtk",false)
        return
    end
    local bossNode = UI.child(self.root,"boss")
    UI.tweenList(bossNode,{
        {
            time = 0.5
        },
        {
            scale = 1.3,
            time = 0.05
        },
        {
            scale = 0.9,
            time = 0.05
        },
        {
            scale = 1.2,
            time = 0.05
        },
        {
            scale = 0.9,
            time = 0.05
        },
    })

    CS.Sound.Play("effect/fight")
    local heroNode = UI.child(self.root,"hero/root")
    heroNode = UI.child(heroNode,0)
    UI.tweenList(heroNode,{
        {
            scale = 80,
            time = 0.1
        },
        {
            scale = 150,
            time = 0.1
        },
        {
            offset = {
                x = 0,
                y = 1000,
                z = 0,
            },
            scale = 100,
            time = 0.2
        },
        {
            fun = function()
                self:attackBossResult(msg)
            end,
            scale = 30,
            time = 0.2
        },
        {
            type = "delete",
        },
    })
end

--S2C_attackBoss
function class:attackBossResult(msg)
    print("boss Blood:"..msg.bossBlood,msg.score)
    local bossDead = msg.bossBlood <= 0
    UI.enable(self.root,"hero",not bossDead)
    self:updateMyRankInfo(msg.myOrder,msg.myDmg)
    self:updateBossBlood(msg.bossTotalBlood,msg.bossBlood)
    self:updateScore(msg.totalScore)
    ComTools.disDamage(self.root,{y=-300},msg.dmg,false)
    if bossDead then
        self:showKillSuccessPage(true,msg.killer)
    else
        self:updateFightHero(msg.newAtkHeroId,msg.newHeroAtk)
    end
end

function class:show(show)
    UI.enable(self.root,show)
    if show then
        message:send("C2S_showBoss",{},function(msg)
            local value =controller:dealWithCode(msg.code)
            if not value then
                return
            end
            local bossDead = msg.bossBlood <=0
            self:showKillPage(bossDead,msg.killer)
            self:updateBossBlood(msg.bossTotalBlood,msg.bossBlood)
            UI.enable(self.root,"hero",not bossDead)
            if not bossDead then
                self:updateFightHero(msg.atkHeroId,msg.heroAtk)
            end
            self:updateMyRankInfo(msg.myOrder,msg.myDmg)
            self:updateScore(msg.score)
        end)
    end
end

function class:updateScore(score)
    if score ==nil then
        score = 0
    end
    UI.text(self.root,"score",score)
end

--击杀者展示界面
--msg:KillInfo
function class:showKillPage(show,msg)
    UI.enable(self.root,"killerShow",show)
    if show then
        print("info:"..msg.level.."/"..msg.headId)
        local data = {
            btnClose = function()
                local child = UI.child(self.root,"killerShow/heroId")
                if child ~= nil and child.childCount > 0 then
                    UI.close(child:GetChild(0))
                end
                controller:backToEntry()
            end,
            unity = msg.unity,
            name = msg.name,
            heroId = 1
        }
        HeroTools.setHeadTemp(msg.headId,msg.level,msg.cloth)
        UI.draw(self.root,"killerShow",data)
        HeroTools.showAnim(self.root,"killerShow/heroId",1)
        HeroTools.clearHeadTemp()
    end
end

--击杀成功界面
--msg KillerInfo
function class:showKillSuccessPage(show,msg)
    CS.Sound.Play("effect/win")
    UI.enable(self.root,"killSuccess",show)
    local goldNum  = config["worldBoss"][1].lastHitReward
    if show then
        local data = {
            name = msg.name,
            reward = "获得皇帝赏赐 "..goldNum.."元宝，诸位明日再接再厉！",
        }

        HeroTools.setHeadTemp(msg.headId,msg.level,msg.cloth)
        UI.draw(self.root,"killSuccess",data)
        HeroTools.showAnim(self.root,"killSuccess/heroId",1)
        HeroTools.clearHeadTemp()
        UI.button(self.root,"killSuccess",function()
            self:showKillSuccessPage(false)
            self:showKillPage(true,msg)
        end)
    end
end

function class:updateMyRankInfo(order,dmg)
    local orderText = order ==0 and "未上榜" or order
    local data = {
        myRank = orderText,
        myScore = goldFormat(dmg)
    }
    UI.draw(self.root,data)
end

function class:updateBossBlood(totalBlood,crtBlood)
    local Slider = UI.child(self.root,"blood")
                     .gameObject:GetComponent(typeof(CS.UnityEngine.UI.Slider))
    if Slider then
        Slider.value = crtBlood/totalBlood
    end
    UI.text(self.root,"blood/num","血量：".. crtBlood)
end

function class:updateFightHero(heroId,atk)
    local data
    local noHero = heroId ==0
    UI.enable(self.root,"hero/black",noHero)
    UI.enable(self.root,"hero/root", not noHero)
    UI.enable(self.root,"hero/btnAtk",not noHero)
    if noHero then
        data = {
            name = " ",
            atk = "???"
        }
    else
        local config = config["hero"][heroId]
        local heroName = config.name
        if heroId ==1 then
            heroName = client.user.name
        end
        data = {
            name = heroName,
            root = config.head,
            atk = heroFightValueFormat(atk)
        }
    end
    UI.draw(self.root,"hero",data)
end

function class:showRecover(show,msg)
    UI.enable(self.root,"change",show)
    if show then
        UI.button(self.root,"change/btnClose",function()
            self:showRecover(false)
        end)
        local config = config["hero"]
        if msg.info == nil or #msg.info <=0 then
            return
        end
        local count = #msg.info
        local parent = UI.child(self.root,"change/list/v/c")
        UI.cloneChild(parent,count)
        for i = 1, count do
            local heroInfo = msg.info[i]
            local heroConfig = config[heroInfo.id]
            local heroName = heroConfig.name
            if heroInfo.id == 1 then
                heroName = client.user.name
            end
            local data = {
                icon = heroConfig.head,
                name = heroName ,
                level = heroInfo.level,
                grow = heroInfo.grow,
                allAtt = heroInfo.allAtt,
                btnFight = function()
                    message:send("C2S_changeBossHero",{id = heroInfo.id},function(msg)
                        if msg.succeed then
                            UI.enable(self.root,"change",false)
                            self:updateFightHero(msg.id,msg.atk)
                        else
                            UI.showHint("切换英雄失败")
                        end
                    end)
                end,
                btnRecover = function()
                    --msg:S2C_usedItem_ack
                    ItemTools.used(7,1,function(msg)
                        if msg.succeed then
                            message:send("C2S_recoverBossHero",{id = heroInfo.id},function(data)
                                local node = parent:GetChild(i-1)
                                UI.enable(node,"btnFight",data.state == "canFight")
                                UI.enable(node,"btnRecover",data.state == "inRest")
                                UI.enable(node,"cantFight",data.state == "cantFight")
                            end)
                        end
                    end,1)
                end
            }
            local node = parent:GetChild(i-1)
            UI.draw(node,data)
            UI.enable(node,"btnFight",heroInfo.state == "canFight")
            UI.enable(node,"btnRecover",heroInfo.state == "inRest")
            UI.enable(node,"cantFight",heroInfo.state == "cantFight")
        end
    end
end

return class
