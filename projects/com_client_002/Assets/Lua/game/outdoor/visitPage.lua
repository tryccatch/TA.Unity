---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Admin.
--- DateTime: 2021/6/21 15:24
---
local Class = {
    res = "UI/weifusifang"
}

function Class:addRedDot(add)
    local btnVisit = UI.child(self.node, "homePage/visitBtn")
    local btnBuGua = UI.child(self.node, "homePage/buGuaBtn")
    if add then
        RedDot.registerBtn(btnVisit, RedDot.SystemID.VisitVisit)
        RedDot.registerBtn(btnBuGua, RedDot.SystemID.VisitBuGua)
    else
        RedDot.unregisterBtn(btnVisit, RedDot.SystemID.VisitVisit)
        RedDot.unregisterBtn(btnBuGua, RedDot.SystemID.VisitBuGua)
    end
end

function Class:showMask(show)
    UI.enable(self.node, "mask", show)
end

function Class:init()
    CS.Sound.PlayMusic("music/travel")

    message:send("C2S_getVisitInfo", {}, function(ret)
        self.visitInfo = ret
        self.homePage = UI.child(self.node, "homePage")
        self.buGuaPage = UI.child(self.node, "buGuaPage")
        self.buildDetailPage = UI.child(self.node, "buildDetailPage")
        self.rewardPage = UI.child(self.node, "rewardPage")
        UI.button(self.node, "closeBtn", function()
            self:addRedDot(false)
            UI.close(self)
        end)

        UI.button(self.homePage, "visitBtn", function()
            self:OnVisitClick()
        end)
        UI.button(self.homePage, "buGuaBtn", function()
            message:send("C2S_getBuGua", {}, function(msg)
                self:updateBuGuaPage(msg)
            end)
        end)

        for i = 1, 6 do
            UI.button(self.homePage,
                    "Scroll View/Viewport/Content/bg/build" .. i,
                    function()
                        self:OnBuildClick(i)
                    end)
        end

        UI.button(self.buildDetailPage, "closeBtn", function()
            UI.enable(self.buildDetailPage, false)
        end)

        UI.button(self.buGuaPage, "window/closeBtn", function()
            UI.enable(self.buGuaPage, false)
        end)

        UI.button(self.rewardPage, "closeBtn", function()
            UI.enable(self.rewardPage, false)
            self:updateVisit()
        end)

        UI.button(self.rewardPage, function()
            UI.enable(self.rewardPage, false)
            self:updateVisit()
        end)

        UI.button(self.buGuaPage, "window/buguaBtn", function()
            UI.enable(self.buGuaPage, "window/buguaBtn", false)
            message:send("C2S_buGua", {}, function(msg)
                self:showBuGuaResult(msg)
            end)
        end)

        UI.button(self.buGuaPage, "window/closeBtn", function()
            UI.enable(self.buGuaPage, false)
            self:updateVisit()
        end)

        self:updateVisit()
        self:updateGuaXiang()
        --self:showMask(false)
    end)

    self:addRedDot(true)
end

function Class:updateVisit()
    message:send("C2S_getVisitInfo", {}, function(ret)

        self.visitInfo = ret
        self:updateVisitBtn(ret.currentVisitCount, ret.maxVisitCount, ret.remainRecoverSce)
        self:updateGuaXiang()
    end)
end

function Class:updateGuaXiang()
    local buildName, girlName, remainCount
    remainCount = self.visitInfo.specialVisitCount
    UI.enable(self.homePage, "guaXiangInfo", remainCount > 0 and self.visitInfo.specialVisitId > 0)
    print("guaXiang remainCount:" .. remainCount)
    if remainCount > 0 and self.visitInfo.specialVisitId > 0 then
        girlName = config["searchCharacter"][self.visitInfo.specialVisitId].name
        buildName = self:GetBuildNameBySearchId(self.visitInfo.specialVisitId)
        --print(" 卦象:"..self.visitInfo.specialVisitId)
        --print(" 卦象:"..buildName)
        UI.text(self.homePage, "guaXiangInfo/buildNameText", buildName)
        UI.text(self.homePage, "guaXiangInfo/peopleNameText", girlName)
        UI.text(self.homePage, "guaXiangInfo/remainCountText", remainCount)
    else

    end
end

function Class:MovePic(buildId)
    if self.buildPos == nil then
        self.buildPos = {}
        for i = 1, 6 do
            local node = UI.child(self.homePage, "Scroll View/Viewport/Content/bg/build" .. i)
            self.buildPos[i] = node.localPosition.x
        end
        local node = UI.child(self.homePage, "Scroll View/Viewport/Content/bg")
        local rect = node.gameObject:GetComponent(typeof(CS.UnityEngine.RectTransform))
        self.mapWidth = rect.rect.width
        --for i, v in ipairs(self.buildPos) do
        --    print("build pos x:"..self.buildPos[i])
        --end
        --print("map width = ".. self.mapWidth)
    end

    local scrollView = UI.child(self.homePage, "Scroll View")
                         .gameObject:GetComponent(typeof(CS.UnityEngine.UI.ScrollRect))
    local resultValue = CS.UnityEngine.Vector2((buildId - 1) * 0.2, 0)
    print("result value:", resultValue)
    CS.UIAPI.TweenNormalizePosition(scrollView, resultValue, 1)
end

function Class:updateVisitBtn(currentVisitCount, maxVisitCount, remainRecoverSce)
    if currentVisitCount > 0 then
        UI.text(self.homePage, "visitBtn/Text", "走访")
        UI.text(self.homePage, "visitCountText",
                currentVisitCount .. "/" .. maxVisitCount)
    else
        UI.text(self.homePage, "visitBtn/Text", "恢复")
        UI.txtUpdateTime(self.homePage, "timeText", remainRecoverSce + 2, function()
            self:updateVisit()
        end)
    end

    UI.enable(self.homePage, "visitCountText", currentVisitCount > 0)
    UI.enable(self.homePage, "timeText", currentVisitCount <= 0)
end

function Class:OnBuildClick(buildId)
    message:send("C2S_buildDetail", { buildId = buildId }, function(msg)
        self:ShowBuildDetailPage(msg)
    end)
end

function Class:ShowBuildDetailPage(msg)
    self:resetScrollRect(self.buildDetailPage, "list", CS.UnityEngine.Vector2(0, 1))
    UI.enable(self.buildDetailPage, true)
    local title = config["searchBuilding"][msg.buildId].building
    UI.text(self.buildDetailPage, "title", title)
    local content = UI.child(self.buildDetailPage, "list/Viewport/Content")
    local msgLen = #msg.buildList
    if content.childCount < msgLen then
        UI.cloneChild(content, msgLen)
    end

    for i = 1, content.childCount do
        local child = content:GetChild(i - 1)
        if i <= msgLen then
            local data = msg.buildList[i]
            self:ShowBuildDetailItem(child, data)
        end
        UI.enable(child, i <= msgLen)
    end
end

function Class:ShowBuildDetailItem(trans, data)
    if data == nil then
        return
    end
    local searchConfig = config["searchCharacter"][data.visitId]
    UI.text(trans, "name", searchConfig.name)
    UI.text(trans, "job", searchConfig.title)
    UI.text(trans, "desc", searchConfig.description)
    print("info:", searchConfig.name, searchConfig.type, data.girlHasUnlock, data.unlockCondition)
    if searchConfig.type == 1 then
        local iconId = config["wife"][searchConfig.wifeID].head
        UI.rawImage(trans, "icon", "wife/wife_half_" .. iconId)
        UI.enable(trans, "icon", true)
        UI.enable(trans, "icon1", false)
        UI.enable(trans, "unlockCondiText", false)
        UI.enable(trans, "familiarProgressBar", true)
        local fTitle;
        if data.girlFamiliarValue < searchConfig.get1 then
            fTitle = "陌生"
        elseif data.girlFamiliarValue < searchConfig.get2 then
            fTitle = "友好"
        else
            fTitle = "亲密"
        end
        UI.text(trans, "familiarProgressBar/levelText", fTitle)
        UI.text(trans, "familiarProgressBar/familiarNumText",
                data.girlFamiliarValue .. "/" .. data.girlFamiliarMax)
        self:changeSliderValue(trans, "familiarProgressBar/slider", data.girlFamiliarValue / data.girlFamiliarMax)
    elseif searchConfig.type == 2 or searchConfig.type == 3 then
        UI.rawImage(trans, "icon1", "character/storyShowCharacter" .. searchConfig.head)
        UI.enable(trans, "icon1", true)
        UI.enable(trans, "icon", false)
        UI.enable(trans, "unlockCondiText", false)
        UI.enable(trans, "familiarProgressBar", false)
    else
        local iconId = config["wife"][searchConfig.wifeID].head
        UI.rawImage(trans, "icon", "wife/wife_half_" .. iconId)
        UI.enable(trans, "icon1", false)
        UI.enable(trans, "icon", true)
        UI.enable(trans, "unlockCondiText", data.girlHasUnlock == 0)
        if data.girlHasUnlock == 0 then
            UI.text(trans, "unlockCondiText", "解锁条件：" .. data.unlockCondition)
        end
        UI.enable(trans, "familiarProgressBar", false)
    end

end

function Class:OnVisitClick()
    if self.visitInfo.currentVisitCount > 0 then
        --self:showMask(true)
        UI.showMask()
        message:send("C2S_visit", {}, function(ret)
            local buildId = self:GetBuildIdBySearchId(ret.visitId)
            self:MovePic(buildId)
            UI.delay(self.node, 1, function()
                UI.closeMask()
                if ret.getNewWifeId ~= 0 then
                    Story.show({
                        wifeID = ret.getNewWifeId,
                        endFun = function()
                            --print("self node name:"..self.node.name)
                            self:ShowRewardPage(ret, true)
                            self:updateGuaXiang(ret.specialVisit, buildId)
                        end
                    })
                else
                    self:ShowRewardPage(ret)
                    self:updateGuaXiang(ret.specialVisit, buildId)
                end
            end)
        end)
    else
        ItemTools.used(71, 1, function()
            self:updateVisit()
        end, "恢复体力？")
    end
end

function Class:GetBuildNameBySearchId(id)
    local buildConfig = config["searchBuilding"]
    for k, v in ipairs(buildConfig) do
        for i = 1, 6 do
            if v["character" .. i] == id then
                return v.building
            end
        end

    end
end

function Class:GetBuildIdBySearchId(id)
    local buildConfig = config["searchBuilding"]
    for k, v in ipairs(buildConfig) do
        for i = 1, 6 do
            if v["character" .. i] == id then
                return v.id
            end
        end

    end
end
--msg = S2C_visit
function Class:ShowRewardPage(msg, newGet)
    UI.enable(self.rewardPage, true)
    local buildName = self:GetBuildNameBySearchId(msg.visitId)
    local characterConfig = config["searchCharacter"][msg.visitId]
    local searchConfig = config["searchConfig"][1]
    UI.text(self.rewardPage, "buildName", buildName)
    UI.text(self.rewardPage, "targetName", characterConfig.name)
    CS.Sound.Play("effect/get")
    if characterConfig.type == 1 then
        local iconId = config["wife"][characterConfig.wifeID].head
        UI.rawImage(self.rewardPage, "icon", "wife/wife_half_" .. iconId)
        UI.enable(self.rewardPage, "familiarProgressBar", true)
        local fTitle = "";
        local dialog;
        local rewardText = "熟悉度 +" .. searchConfig.FamiliarDelta
        if msg.girlFamiliarValue < characterConfig.get1 then
            fTitle = "陌生"
            dialog = characterConfig.getTalk1
        elseif msg.girlFamiliarValue < characterConfig.get2 then
            fTitle = "友好"
            dialog = characterConfig.getTalk2
        elseif msg.girlFamiliarValue < characterConfig.get3 or newGet then
            fTitle = "亲密"
            dialog = characterConfig.getTalk3
        else
            dialog = characterConfig.getTalk3
            rewardText = "亲密度 +" .. searchConfig.IntimacyDelta
        end

        local hasGetWife = msg.girlFamiliarValue >= characterConfig.get3
        local show = false
        if not hasGetWife or newGet then
            show = true
        end
        UI.text(self.rewardPage, "familiarProgressBar/levelText", fTitle)
        UI.text(self.rewardPage, "familiarProgressBar/familiarNumText",
                msg.girlFamiliarValue .. "/" .. msg.girlFamiliarMax)
        UI.text(self.rewardPage, "dialogText", dialog)
        UI.text(self.rewardPage, "rewardText", rewardText)
        self:changeSliderValue(self.rewardPage, "familiarProgressBar/slider", msg.girlFamiliarValue / msg.girlFamiliarMax)
        UI.enable(self.rewardPage, "familiarProgressBar", show)
    elseif characterConfig.type == 2 or characterConfig.type == 3 then
        UI.rawImage(self.rewardPage, "icon", "character/storyShowCharacter" .. characterConfig.head)
        UI.enable(self.rewardPage, "familiarProgressBar", false)
        UI.text(self.rewardPage, "dialogText", characterConfig.talk)
        UI.text(self.rewardPage, "rewardText", self:GetResDesc(msg.resId, msg.resCount))
    else
        local iconId = config["wife"][characterConfig.wifeID].head
        local rewardText = "亲密度 +" .. searchConfig.IntimacyDelta
        UI.rawImage(self.rewardPage, "icon", "wife/wife_half_" .. iconId)
        UI.enable(self.rewardPage, "familiarProgressBar", false)
        UI.text(self.rewardPage, "dialogText", characterConfig.talk)
        UI.text(self.rewardPage, "rewardText", rewardText)
    end

end

function Class:GetResDesc(resId, resCount)
    if resId == 0 then
        return "银两 +" .. resCount
    elseif resId == 1 then
        return "粮草 +" .. resCount
    else
        return "士兵 +" .. resCount
    end
end

function Class:updateBuGuaPage(msg)
    UI.enable(self.buGuaPage, true)
    local showGuaXiang = msg.specialVisit.specialVisitId ~= 0
    UI.enable(self.buGuaPage, "window/guaXiang", showGuaXiang)
    if showGuaXiang then
        local guaXiang = UI.child(self.buGuaPage, "window/guaXiang")
        UI.text(guaXiang, "buildNameText",
                self:GetBuildNameBySearchId(msg.specialVisit.specialVisitId))
        local config = self:getVisitPeopleConfig(msg.specialVisit.specialVisitId)
        UI.text(guaXiang, "personNameText", config.name)
        UI.text(guaXiang, "remainNumText", msg.specialVisit.specialVisitCount)
    end

    local txt = "免费"
    if msg.buGuaCost > 0 then
        txt = msg.buGuaCost
    end
    UI.text(self.buGuaPage, "window/goldCostText", txt)
end

function Class:getVisitPeopleConfig(searchId)
    local config = config["searchCharacter"][searchId]
    return config
end

function Class:showBuGuaResult(msg)
    if msg.code == "noGold" then
        UI.showHint("元宝不足，可前往充值")
        UI.enable(self.buGuaPage, "window/buguaBtn", true)
        return
    end
    local comp = UI.child(self.buGuaPage, "window/baGuaFish").gameObject:GetComponent(typeof(CS.SAnim))
    comp.gameObject:SetActive(true)
    comp:Reset()
    comp:Play()
    UI.delay(self.buGuaPage, 2, function()
        UI.enable(self.buGuaPage, "window/goldlight", true)
        UI.delay(self.buGuaPage, 0.5, function()
            UI.enable(self.buGuaPage, "window/goldlight", false)
            comp.gameObject:SetActive(false)
        end)

        print("bu gua over:show result")
        local guaXiang = UI.child(self.buGuaPage, "window/guaXiang")
        UI.enable(guaXiang, true)
        UI.text(guaXiang, "buildNameText",
                self:GetBuildNameBySearchId(msg.specialVisit.specialVisitId))
        local config = self:getVisitPeopleConfig(msg.specialVisit.specialVisitId)
        UI.text(guaXiang, "personNameText", config.name)
        UI.text(guaXiang, "remainNumText", msg.specialVisit.specialVisitCount)

        local txt = "免费"
        if msg.nextBuGuaCost > 0 then
            txt = msg.nextBuGuaCost
        end
        UI.text(self.buGuaPage, "window/goldCostText", txt)
        UI.enable(self.buGuaPage, "window/buguaBtn", true)
    end)
end

function Class:changeSliderValue(node, path, value)
    local slider = UI.child(node, path)
    if slider ~= nil then
        local comp = slider.gameObject:GetComponent(typeof(CS.UnityEngine.UI.Slider))
        if comp ~= nil then
            comp.value = value
        end
    end
end

function Class:resetScrollRect(node, path, result)
    local temp = UI.child(node, path)
    if temp ~= nil then
        local comp = temp.gameObject:GetComponent(typeof(CS.UnityEngine.UI.ScrollRect))
        if comp then
            if result then
                comp.normalizedPosition = result
            else
                comp.normalizedPosition = CS.UnityEngine.Vector2.zero
            end
        end
    end
end

return Class
