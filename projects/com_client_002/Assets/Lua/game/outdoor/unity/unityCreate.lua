---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Admin.
--- DateTime: 2021/7/21 16:50
---
local cls = {
    res = "ui/unity_create"
}

function cls:close()
    self.controller:close(self.controller.Pages.Create)
end

local advTextLimit = 120
local unityNameLimitMin = 4
local unityNameLimitMax = 8
local nameInputField;
local advInputField;
local allowOtherRandomJoin = false
function cls:init(data)
    self.controller = data.controller
    local data = {
        btnClose = function()
            self:close()
        end,
        btnCreate = function()
            self:create()
        end
    }
    UI.draw(self.node, data)
    UI.toggle(self.node, "randomJoin", function(isOn)
        self:onRandomJoinClick(isOn)
    end, true)

    nameInputField = self:getInputField(self.node, "name")
    advInputField = self:getInputField(self.node, "advInputField")
    self:addInputFieldListener(self.node, "name", unityNameLimitMax, function(value)
        self:onUnityNameChange(value)
    end)

    self:addInputFieldListener(self.node, "advInputField", advTextLimit, function(value)
        self:onAdvValueChange(value)
    end)

    UI.text(self.node, "gold", config["allianceConfigure"][1].createCost)

end

function cls:onUnityNameChange(value)
    local len = Tools.getStrLenAsOne(value)
    if len > unityNameLimitMax then
        value = Tools.subStringAsOne(value, unityNameLimitMax)
    end
    nameInputField.text = Tools.removeSymbolInString(value)
end

function cls:onAdvValueChange(value)
    local len = Tools.getStrLenAsOne(value)
    self:updateAdvTextCount(len)
    if len >= advTextLimit then
        advInputField.text = Tools.subStringAsOne(value, advTextLimit)
    end
end

function cls:updateAdvTextCount(count)
    UI.text(self.node, "count", count .. "/" .. advTextLimit)
end

function cls:create()
    local name = nameInputField.text

    if name == nil or #name <= 0 then
        UI.showHint("请输入联盟名字")
        return
    end
    name = Tools.removeSymbolInString(name)
    local hasSensitive, r1, r2 = Tools.sensitiveCheck(name)
    if hasSensitive then
        UI.showHint("联盟名字含有违禁词")
        return
    end

    local nameLen = Tools.getStrLenAsOne(name)
    if nameLen < unityNameLimitMin then
        UI.showHint("可输入" .. unityNameLimitMin .. "-" .. unityNameLimitMax .. "个字符")
        return
    end

    if nameLen > unityNameLimitMax then
        UI.showHint("可输入" .. unityNameLimitMin .. "-" .. unityNameLimitMax .. "个字符")
        return
    end

    local advText = advInputField.text
    local r1, r2, r3 = Tools.sensitiveCheck(advText)
    if r1 then
        UI.showHint("联盟宣言包含敏感词:" .. r3)
        return
    end

    message:send("C2S_createUnity", {
        name = name,
        adv = advText,
        randomJoin = allowOtherRandomJoin
    }, function(msg)
        self:onCreateMsg(msg)
    end)
end

-- msg S2C_createUnity
function cls:onCreateMsg(msg)
    if msg.code == "ok" then
        self:close()
        self.controller:openPage(self.controller.Pages.Main)
    elseif msg.code == "nameExist" then
        UI.showHint("联盟名称重复，请重新输入")
    elseif msg.code == "noGold" then
        UI.showHint("元宝不足，可前往充值获取")
    elseif msg.code == "playerHasUnity" then
        UI.msgBoxNoCloseBtn("提示", "您已加入联盟，立刻前往联盟吧！", function()
            self.controller:openPage(self.controller.Pages.Main)
            self:close()
        end)
    end
end

function cls:onRandomJoinClick(isOn)
    allowOtherRandomJoin = isOn
end

function cls:addInputFieldListener(node, path, limitCount, callback)
    local inputField = self:getInputField(node, path)
    if inputField then
        inputField.characterLimit = limitCount
        inputField.onValueChanged:AddListener(callback)
    end
end

function cls:getInputField(node, path)
    local child = UI.child(node, path)
    if child then
        local inputField = child.gameObject:GetComponent(typeof(CS.UnityEngine.UI.InputField))
        if inputField then
            return inputField
        else
            log_call("no InputField component on node:" .. node.name .. "/" .. path)
        end
    else
        log_call("no child for node:" .. node.name .. ",path:" .. path)
    end
end

return cls

