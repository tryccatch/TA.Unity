---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Admin.
--- DateTime: 2021/8/4 9:40
---
local cls = {
    res = "ui/unity_member"
}

function cls:close()
    self.controller:close(self.controller.Pages.Member)
end

function cls:init(params)
    self.controller = params.controller
    UI.button(self.node, "btnClose", function()
        self:close()
    end)
    self:update()
end

function cls:onFront()
    if self.controller.exitUnity then
        return
    end
    self:update()
end

function cls:update()
    message:send("C2S_openMember", {}, function(msg)
        log(msg)
        if msg.code == "ok" then
            local parent = UI.child(self.node, "list/v/c")
            local count = msg.members and #msg.members or 0
            UI.cloneChild(parent, count)
            if count > 0 then
                self:sortList(msg.members)
                for i = 1, count do
                    local item = parent:GetChild(i - 1)
                    local sourceData = msg.members[i]
                    self:updateSingleItem(item, sourceData, msg.job)
                end
            end
            UI.text(self.node, "unityCount", count .. "/" .. msg.memberMax)
            UI.text(self.node, "onlineCount", msg.onlineMember)
        else
            self:dealWithCode(msg.code)
        end
    end)
end

function cls:getBuildTypeStr(buildType)
    if buildType == 0 then
        return ""
    elseif buildType == 1 then
        return "普通建设"
    elseif buildType == 2 then
        return "高级建设"
    elseif buildType == 3 then
        return "道具建设"
    elseif buildType == 4 then
        return "高级道具建设"
    end
end

function cls:updateSingleItem(node, data, job)
    local onlineStr = self:getOnlineStr(data.online, data.offlineTime)
    if onlineStr ~= "在线" then
        if onlineStr =="刚刚" then
            onlineStr = onlineStr .."在线"
        else
            onlineStr = onlineStr .. "前在线"
        end
    end

    local drawData = {
        name = data.name,
        build = self:getBuildTypeStr(data.buildType),
        job = self:getJobNameStr(data.job),
        level = config["level"][data.level].name,
        state = onlineStr,
        attribute = data.attribute,
        power = goldFormat(data.power),
        vipLv = data.vipLevel
    }
    UI.draw(node, drawData)
    UI.enable(node, "build", data.buildType > -1)
    local hasAuthority = self:checkChangeJobAuthority(job, data.job)
    UI.enable(node, "btnChangeJob", hasAuthority)
    if hasAuthority then
        UI.button(node, "btnChangeJob", function()
            self:changeUserJob(job, data)
        end)
    end
end

function cls:changeUserJob(job, data)
    self.controller:openPage(self.controller.Pages.ChangeUserJob, { job, data })
end

function cls:checkChangeJobAuthority(myJob, otherJob)
    print(myJob, otherJob)
    if otherJob == "Leader" then
        return false
    end

    if myJob == "Leader" then
        return true
    elseif myJob == "SubLeader" and (otherJob == "Elites" or otherJob == "Member") then
        return true
    else
        return false
    end
end

function cls:getOnlineStr(online, offlineTime)
    if online then
        return "在线"
    else
        if offlineTime < 60 * 1000 then
            return "刚刚"
        elseif offlineTime < 60 * 60 * 1000 then
            return math.floor(offlineTime / (60 * 1000)) .. "分钟"
        elseif offlineTime < 24 * 60 * 60 * 1000 then
            local hour = math.floor(offlineTime / (60 * 60 * 1000))
            return hour .. "小时"
        elseif offlineTime < 30 * 24 * 60 * 60 * 1000 then
            return math.floor(offlineTime / (24 * 60 * 60 * 1000)) .. "天"
        else
            return "30天"
        end
    end
end

function cls:sortList(list)
    if list and #list > 0 then
        table.sort(list, function(a, b)
            if a.online ~= b.online then
                return a.online
            elseif a.level ~= b.level then
                return a.level > b.level
            elseif a.power ~= b.power then
                return a.power > b.power
            elseif a.joinTime ~= b.joinTime then
                return a.joinTime < b.joinTime
            else
                return false
            end
        end)
    end
end

function cls:dealWithCode(code)
    if code == "noUnity" then
        UI.showHint("联盟不存在!")
        print("unity member---联盟不存在")
        self.controller:exit()
    end
end

function cls:getJobNameStr(job)
    if job == "Member" then
        return "成员"
    elseif job == "Elites" then
        return "精英"
    elseif job == "SubLeader" then
        return "副盟主"
    else
        return "盟主"
    end
end

return cls
