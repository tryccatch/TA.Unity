---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Admin.
--- DateTime: 2021/8/16 15:54
---
local cls = {
    res = "ui/unity_secretHeroList"
}

function cls:close()
    self.controller:close(self.controller.Pages.ChangeHeroes)
end

function cls:init(params)
    self.controller = params.controller
    self.callback = params.params.callback
    UI.button(self.node, "BtnBack", function()
        self:close()
    end)

    self:show(params.params.lv)
end

function cls:show(lv)
    self.lv = lv
    message:send("C2S_showChangeHero", { level = lv }, function(msg)
        local exit, close = self:dealWithCode(code)
        if exit or close then
            return
        end
        self:updateList(msg.heroList, msg.fightHero)
    end)
end

function cls:updateList(data, fightHero)
    local parent = UI.child(self.node, "list/v/c")
    local count = data == nil and 0 or #data
    UI.cloneChild(parent, count)
    if count > 0 then
        for i = 1, count do
            local item = parent:GetChild(i - 1)
            self:updateItem(item, data[i], i, fightHero)
        end
    end
end

-- data  fightBossHero
function cls:updateItem(node, data, index, fightHero)
    local heroConfig = config["hero"][data.id]
    local heroName = client.user.name
    if data.id > 1 then
        heroName = heroConfig.name
    end
    local drawData = {
        name = heroName,
        level = data.level,
        strengthGrows = data.strengthGrow,
        atk = data.atk,
        id = data.id,
        canRelive = function()
            self:reliveHero(data.id, node, data, index, fightHero)
        end,
        canBattle = function()
            self:changeHero(data.id)
        end
    }

    UI.draw(node, drawData)

    UI.enable(node, "canBattle", data.state == "alive" or data.state == "relive")
    UI.enable(node, "canRelive", data.state == "dead")
    UI.enable(node, "selected", data.id == fightHero)
end

function cls:reliveHero(heroId, node, data, index, fightHero)
    --msg:S2C_usedItem_ack
    print("msg ---", "恢复恢复", heroId)
    ItemTools.used(7, 1, function(msg)
        if msg.succeed then
            message:send("C2S_reliveSecretHero", { level = self.lv, heroId = heroId }, function(result)
                local exit, close = self:dealWithCode(result.code, "恢复成功")
                if exit or close then
                    return
                end

                data.state = result.newState
                self:updateItem(node, data, index, fightHero)
            end)
        end
    end, 1)
end

function cls:changeHero(heroId)
    message:send("C2S_changeSecretHero", { level = self.lv, heroId = heroId }, function(msg)
        local exit, close = self:dealWithCode(code, "切换成功")
        if exit or close then
            return
        end
        self:close()
        self.callback(msg.heroId, msg.heroAtk, msg.crtHp)
    end)
end

function cls:dealWithCode(code, successMsg)
    local tip = successMsg
    local exit = false
    local close = false
    if code == "noUnity" then
        exit = true
        tip = "联盟数据不存在！"
    elseif code == "notMember" then
        exit = true
        tip = "您已不是联盟成员！"
    elseif code == "validSecretId" then
        tip = "无效的秘境ID，请退出重试"
        close = true
    elseif code == "noSecretData" then
        tip = "没有秘境数据，请退出重试"
        close = true
    elseif code == "secretHasClose" then
        tip = "秘境已关闭"
        close = true
    elseif code == "secretBossDead" then
        tip = "该秘境已被击败"
        close = true
    elseif code == "secretHasUsed" then
        tip = "您已在其他联盟参与过此等级秘境，不可再次参与"
        close = true
    elseif code == "fail" then
        tip = "操作失败!"
    end

    if tip ~= nil then
        UI.showHint(tip)
    end
    if exit then
        self.controller:exit()
    elseif close then
        self:close()
    end

    return exit, close
end

return cls